pattern:
  name: slave_servers
<%-
require 'net/http'
require 'json'
require 'uri'
def exported_resources(resource, tags, exported=true)
  headers = { 'Accept' => 'application/json' }
  query    = ['and', ['=', 'exported', true], ['~', 'tag', "dns__(#{tags.join('|')})"]]
  uri      = "/pdb/query/v4/resources/#{resource}"
  uri      += URI.escape("?query=#{query.to_json}")
  http     = Net::HTTP.new(@puppetdb_server, @puppetdb_port)
  begin
    response = http.get(uri, headers)
    if response.code != "200"
      scope.call_function(
        'warning',
        ["unable to connect to the puppet server, exported resources wont work: #{response.code}"])
      return []
    end
    JSON.parse(response.body)
  rescue Exception => e
    scope.call_function('warning', ["unable to connect to the puppetdb server, exported resources wont work: #{e}"])
    return []
  end
end
unless @imports.empty? 
  nsd_resources = exported_resources('Nsd::Remote', @imports)
  dns_resources = exported_resources('Dns::Remote', @imports)
  resources = (nsd_resources + dns_resources).uniq { |h| h['title'] }
  resources.each do |resource|
-%>
  include-pattern: <%= resource['title'] %>-provide-xfr
<%-
  end
end
%>
